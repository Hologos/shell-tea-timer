#! /usr/bin/env bash

function utils::is_installed() {
    command which "${1}" &> /dev/null && return 0

    return 1
}

function utils::terminate() {
    local exit_code="1"
    local message=""

    if [[ ${#} -eq 1 ]]; then
        message="${1}"
    elif [[ ${#} -eq 2 ]]; then
        exit_code="${1}"
        message="${2}"
    fi

    if [[ ${#} -ne 0 ]]; then
        >&2 echo
        >&2 ansi --bold --red "The program has been terminated due to a critical error:"
        >&2 echo
        >&2 echo "${message}"
    fi

    exit "${exit_code}"
}

function utils::check_if_set() {
    local param_name="${1}"
    local input="${2}"

    if [[ "${input}" == "${UNDEF_VALUE}" ]]; then
        utils::terminate "Undefined value for param [${param_name}]."
    fi
}

function utils::repeat_char() {
    local end="${1}"
    local str="${2}"

    local start=1
    local range

    range="$(seq "${start}" "${end}")"

    if [[ "$(echo "if (${end} < ${start}) 0 else 1" | bc)" == "0" ]]; then
        return
    fi

    for start in ${range}; do
        printf '%s' "${str}"
    done
}

function utils::get_finished_percentage() {
    local finished_amount="${1}"
    local total="${2}"

    finished_percents="$(echo "((${finished_amount}) * 100 / ${total}) / 1" | bc)"

    if [[ "${finished_percents}" -gt 100 ]]; then
        printf '%s' "100"
        return
    fi

    printf '%s' "${finished_percents}"
}

function utils::check_prerequisites() {
    if ! utils::is_installed "fzf"; then
        utils::terminate "fzf is not installed"
    fi

    # OS specific prerequisites
    utils::"${STT_OS}"::check_prerequisites
}

function utils::verify_number() {
    local param_name="${1}"
    local input="${2}"

    if ! [[ "${input}" =~ ^[0-9]+(\.[0-9]+)?$ ]]; then
        utils::terminate "[${input}] is not a valid number (nor integer, nor float) for parameter [${param_name}]."
    fi

    return 0
}

function utils::get_current_datetime() {
    date +'%d.%m%.%Y-%H:%M'
}
