#! /usr/bin/env bash

readonly STT_TMP_FILEPATH_ROOT="/tmp/shell-tea-timer"

readonly IO_PARAM_POT="pot"
readonly IO_PARAM_TEA_INFUSION_COUNTER="tea_infusion_counter"

function stt::io::read_param() {
    local tea="${1}"
    local param_name="${2}"

    stt::io::read_param_grace "${tea}" "${param_name}" \
        || stt::utils::terminate "Parameter [${param_name}] does not exist for tea [${tea}]."
}

function stt::io::read_param_grace() {
    local tea="${1}"
    local param_name="${2}"

    local filepath="${STT_TMP_FILEPATH_ROOT}.${tea}.${param_name}.cfg"

    if [[ ! -r "${filepath}" ]]; then
        return 1
    fi

    cat "${filepath}"
}

function stt::io::write_param() {
    local tea="${1}"
    local param_name="${2}"
    local param_value="${3}"

    local filepath="${STT_TMP_FILEPATH_ROOT}.${tea}.${param_name}.cfg"

    printf '%s' "${param_value}" > "${filepath}" 2> /dev/null
}

function stt::io::discover_files() {
    local dirpath="${1}"
    local file_ext="${2}"

    if [[ ! -e "${dirpath}" ]]; then
        stt::utils::terminate "Directory [${dirpath}] does not exist."
    fi

    if [[ ! -d "${dirpath}" ]]; then
        stt::utils::terminate "[${dirpath}] is not a directory."
    fi

    find "${dirpath}" -type f -name "*.${file_ext}" -exec basename {} \;
}

function stt::io::discover_tea_conf_files() {
    stt::io::discover_files "${TEAS_CONF_DIRPATH}" "conf"
}

function stt::utils::discover_teas() {
    stt::io::discover_tea_conf_files | rev | cut -c 6- | rev | sort
}

function stt::io::discover_pot_conf_files() {
    stt::io::discover_files "${POTS_CONF_DIRPATH}" "conf"
}
