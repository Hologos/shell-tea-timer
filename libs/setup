#! /usr/bin/env bash

function stt::setup::setup_tea_params() {
    local tea="${1}"
    local tea_config_filepath

    TEA="${tea}"
    tea_config_filepath="$(stt::io::discover_tea_conf_files | grep "${tea}")" || return 1

    # shellcheck source=../conf/teas/generic-green.conf
    source "${TEAS_CONF_DIRPATH}/${tea_config_filepath}"

    stt::utils::check_if_set "tea name" "${TEA_NAME}"
    stt::utils::check_if_set "initial infusion duration" "${TEA_INITIAL_INFUSION_DURATION}"
    stt::utils::check_if_set "next infusion duration" "${TEA_NEXT_INFUSION_DURATION}"
    stt::utils::check_if_set "number of infusions" "${TEA_NUMBER_OF_INFUSIONS}"
    stt::utils::check_if_set "brewing temperature" "${TEA_BREWING_TEMP}"
    stt::utils::check_if_set "amount per 100g" "${TEA_AMOUNT_PER_100G}"
}

function stt::setup::setup_pot_params() {
    local tea="${1}"
    local pot_config_filepath

    POT="$(stt::io::read_param "${tea}" "${IO_PARAM_POT}")" || exit ${?}
    pot_config_filepath="$(stt::io::discover_pot_conf_files | grep "${POT}")" || return 1

    # shellcheck source=../conf/pots/generic-pot.conf
    source "${POTS_CONF_DIRPATH}/${pot_config_filepath}"

    stt::utils::check_if_set "pot name" "${POT_NAME}"
    stt::utils::check_if_set "pot decant duration" "${POT_DECANT_DURATION}"
    stt::utils::check_if_set "pot capacity with leaves" "${POT_CAPACITY_WITH_LEAVES}"
}

function stt::setup::setup_params_if_valid_tea() {
    local tea="${1}"

    stt::setup::setup_tea_params "${tea}" || return 1
    stt::setup::setup_pot_params "${tea}" || return 1

    TEA_INFUSION_COUNTER="$(stt::io::read_param_grace "${TEA}" "${IO_PARAM_TEA_INFUSION_COUNTER}" || printf '0')"

    return 0
}

function stt::setup::setup_pot() {
    echo
    ansi --bold --no-newline "Choose a pot you want to brew in: "
    POT="$(stt::io::discover_pot_conf_files | rev | cut -c 6- | rev | sort | fzf)" || stt::utils::terminate "You have to choose a pot!"
    stt::io::write_param "${TEA}" "${IO_PARAM_POT}" "${POT}"
    stt::setup::setup_pot_params "${TEA}"
    ansi --bold --no-newline "Choose a pot you want to brew in: "
    ansi "${POT_NAME}"
}

function stt::setup::setup() {
    echo
    ansi --bold --no-newline "Choose a tea you want to brew: "
    TEA="$(stt::io::discover_tea_conf_files | rev | cut -c 6- | rev | sort | fzf)" || stt::utils::terminate "You have to choose a tea!"
    stt::setup::setup_tea_params "${TEA}"
    ansi --bold --no-newline "Choose a tea you want to brew: "
    ansi "${TEA_NAME}"

    TEA_INFUSION_COUNTER="$(stt::io::read_param_grace "${TEA}" "${IO_PARAM_TEA_INFUSION_COUNTER}" || printf '0')"
    POT="$(stt::io::read_param_grace "${TEA}" "${IO_PARAM_POT}" || printf '%s' "${UNDEF_VALUE}")"

    local ANSWER_NEW_SESSION="new session"
    local ANSWER_RESET="reset infusion counter"
    local ANSWER_SET="set infusion counter"
    local action_message="What action do you want to do?"
    local action answer
    local action_list=( "${ANSWER_NEW_SESSION}" )

    if [[ "${TEA_INFUSION_COUNTER}" -gt 0 ]]; then
        action_message="Previous session found with $(stt::format::format_infusion_number). ${action_message}"
        action_list+=( "${ANSWER_RESET}" "${ANSWER_SET}" )
    else
        action_list+=( "${ANSWER_SET}" )
    fi

    if [[ "${POT}" != "${UNDEF_VALUE}" ]]; then
        stt::setup::setup_pot_params "${TEA}"
    fi

    # TODO: ověřit, že to není nějaké mega staré

    echo
    ansi --bold --no-newline "${action_message} "
    action="$(echo -e "$(IFS=$'\n'; printf '%s' "${action_list[*]}")" | fzf)" || stt::utils::terminate "You have to choose an action!"
    stt::setup::setup_tea_params "${TEA}"
    ansi --bold --no-newline "${action_message} "
    ansi "${action}"

    case "${action}" in
        "${ANSWER_NEW_SESSION}" )
            stt::setup::setup_pot
        ;;

        "${ANSWER_RESET}" )
            stt::io::reset_infusion_counter "${TEA}"

            # TODO: maybe ask, if wants to set pot?
            stt::setup::setup_pot
        ;;

        "${ANSWER_SET}" )
            echo
            ansi --bold --no-newline "How many infusions have you had? "
            read -r answer

            if [[ "${answer}" =~ ^[0-9]+$ ]]; then
                stt::io::write_param "${TEA}" "${IO_PARAM_TEA_INFUSION_COUNTER}" "${answer}"
            else
                stt::utils::terminate "[${answer}] is not a number!"
            fi

            if [[ "${POT}" != "${UNDEF_VALUE}" ]]; then
                stt::setup::setup_pot
            fi
        ;;

        * )
            stt::utils::terminate "Unknown action [${action}]."
    esac

    echo
    echo "Heat your water to $(ansi --bold "$(stt::helpers::water_temp)")."

    echo
    echo "Use $(ansi --bold "$(stt::helpers::calculate_leaves_amount)") of leaves (${TEA_AMOUNT_PER_100G} g per 100 ml, pot capacity is ${POT_CAPACITY_WITH_LEAVES} ml)."

    local command
    command="$(stt::helpers::get_start_command)"

    echo
    ansi --bold "Your command has been copied to your clipboard!"
    printf "%s" "${command}" | pbcopy
}
